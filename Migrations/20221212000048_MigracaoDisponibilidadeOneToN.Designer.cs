// <auto-generated />
using System;
using AgendaTutorialApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AgendaTutorialApi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20221212000048_MigracaoDisponibilidadeOneToN")]
    partial class MigracaoDisponibilidadeOneToN
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AgendaTutorialApi.Models.Agendamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataAgendamento")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DisciplnaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("HoraAgendamento")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DisciplnaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Agendamentos");
                });

            modelBuilder.Entity("AgendaTutorialApi.Models.Disciplina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Disciplinas");
                });

            modelBuilder.Entity("AgendaTutorialApi.Models.Disponibilidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataDisponibilidade")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DisciplinaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("HoraDisponibilidade")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DisciplinaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Disponibilidades");
                });

            modelBuilder.Entity("AgendaTutorialApi.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Senha")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("Id");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            Email = "ana.felippe3@etec.sp.gov.br",
                            Login = "AnaClaudia",
                            Nome = "Ana Claudia",
                            TipoUsuario = 1
                        },
                        new
                        {
                            Id = 3,
                            Email = "maroyofelippe@gmail.com",
                            Login = "mrroyo",
                            Nome = "Marco Royo",
                            TipoUsuario = 1
                        },
                        new
                        {
                            Id = 4,
                            Email = "rafaelTutor@gmail.com",
                            Login = "rafaroyo",
                            Nome = "Rafael Royo",
                            TipoUsuario = 3
                        },
                        new
                        {
                            Id = 1,
                            Nome = "Admin",
                            PasswordHash = new byte[] { 56, 149, 140, 246, 230, 9, 67, 155, 150, 202, 246, 157, 80, 154, 128, 141, 128, 246, 115, 64, 181, 163, 120, 185, 170, 136, 76, 78, 17, 66, 116, 77, 66, 117, 15, 50, 198, 109, 148, 5, 0, 77, 17, 107, 144, 143, 131, 0, 167, 68, 227, 83, 172, 134, 224, 54, 143, 44, 159, 46, 182, 59, 245, 72 },
                            PasswordSalt = new byte[] { 175, 103, 167, 48, 241, 89, 217, 101, 134, 58, 73, 37, 32, 20, 142, 122, 100, 30, 231, 180, 175, 209, 179, 226, 41, 52, 16, 21, 100, 121, 39, 3, 61, 247, 149, 221, 139, 244, 110, 78, 75, 50, 163, 42, 158, 33, 156, 115, 94, 63, 216, 229, 114, 206, 94, 179, 103, 100, 236, 94, 206, 105, 208, 195, 13, 154, 136, 75, 215, 218, 6, 34, 115, 176, 41, 62, 216, 248, 208, 91, 84, 228, 47, 8, 169, 175, 197, 84, 163, 65, 62, 231, 65, 114, 115, 169, 197, 218, 193, 79, 202, 60, 30, 135, 133, 14, 163, 233, 5, 249, 102, 166, 48, 195, 22, 192, 156, 80, 145, 238, 126, 100, 59, 96, 156, 11, 25, 118 },
                            Senha = "",
                            TipoUsuario = 4
                        });
                });

            modelBuilder.Entity("AgendaTutorialApi.Models.Agendamento", b =>
                {
                    b.HasOne("AgendaTutorialApi.Models.Disciplina", "Disciplna")
                        .WithMany()
                        .HasForeignKey("DisciplnaId");

                    b.HasOne("AgendaTutorialApi.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Disciplna");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("AgendaTutorialApi.Models.Disponibilidade", b =>
                {
                    b.HasOne("AgendaTutorialApi.Models.Disciplina", "Disciplina")
                        .WithMany()
                        .HasForeignKey("DisciplinaId");

                    b.HasOne("AgendaTutorialApi.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Disciplina");

                    b.Navigation("Usuario");
                });
#pragma warning restore 612, 618
        }
    }
}
