using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace AgendaTutorialApi.Migrations
{
    /// <inheritdoc />
    public partial class AgendamentoUpdate : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "Usuarios",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 232, 231, 227, 199, 146, 125, 142, 208, 103, 75, 169, 221, 197, 1, 249, 228, 8, 189, 98, 111, 141, 62, 4, 28, 197, 28, 25, 106, 32, 112, 113, 5, 115, 17, 197, 114, 101, 163, 242, 54, 214, 92, 61, 211, 68, 37, 121, 249, 90, 91, 230, 121, 0, 84, 152, 14, 1, 127, 28, 173, 38, 66, 13, 138 }, new byte[] { 141, 204, 90, 224, 107, 233, 154, 52, 179, 145, 38, 248, 119, 156, 27, 215, 98, 133, 222, 126, 71, 36, 56, 31, 175, 81, 228, 156, 46, 87, 62, 107, 98, 253, 88, 125, 177, 6, 38, 72, 84, 26, 183, 230, 152, 74, 33, 156, 246, 226, 236, 136, 1, 87, 4, 178, 34, 73, 224, 165, 205, 211, 223, 130, 120, 182, 251, 198, 35, 158, 87, 3, 109, 199, 185, 141, 171, 136, 94, 130, 249, 187, 76, 119, 215, 243, 19, 236, 173, 198, 119, 211, 189, 160, 17, 75, 219, 235, 82, 140, 152, 235, 50, 247, 45, 115, 199, 165, 132, 200, 2, 225, 35, 107, 118, 232, 222, 58, 252, 158, 116, 199, 20, 77, 41, 69, 227, 135 } });
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "Usuarios",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 234, 104, 54, 74, 226, 32, 34, 130, 83, 106, 116, 48, 5, 3, 228, 68, 115, 181, 155, 26, 72, 142, 135, 75, 173, 173, 232, 68, 18, 194, 96, 130, 163, 44, 253, 247, 41, 44, 34, 96, 117, 81, 87, 197, 42, 18, 189, 165, 36, 189, 197, 240, 241, 242, 235, 248, 153, 223, 90, 138, 11, 157, 179, 18 }, new byte[] { 0, 139, 192, 38, 29, 166, 110, 63, 157, 205, 126, 38, 117, 43, 107, 95, 244, 241, 67, 13, 41, 244, 166, 44, 138, 191, 6, 182, 80, 29, 38, 198, 153, 241, 45, 109, 182, 87, 34, 201, 255, 0, 242, 246, 195, 77, 224, 197, 220, 73, 55, 114, 27, 180, 23, 132, 196, 93, 153, 143, 248, 183, 161, 218, 85, 134, 160, 76, 9, 165, 208, 56, 32, 246, 4, 221, 99, 83, 123, 141, 161, 141, 68, 90, 143, 8, 83, 197, 238, 247, 0, 197, 189, 239, 182, 67, 212, 234, 2, 32, 124, 215, 105, 176, 69, 24, 217, 110, 38, 231, 1, 129, 60, 19, 251, 109, 29, 3, 121, 137, 218, 142, 45, 77, 213, 118, 200, 252 } });
        }
    }
}
